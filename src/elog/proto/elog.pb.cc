// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: elog.proto
// Protobuf C++ Version: 6.30.2

#include "elog.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace elog_grpc {
template <typename>
PROTOBUF_CONSTEXPR ELogGRPCStatus::ELogGRPCStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(ELogGRPCStatus_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ELogGRPCStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ELogGRPCStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ELogGRPCStatusDefaultTypeInternal() {}
  union {
    ELogGRPCStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ELogGRPCStatusDefaultTypeInternal _ELogGRPCStatus_default_instance_;

inline constexpr ELogGRPCRecordMsg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hostname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        programname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        threadname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        functionname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        logsourcename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        modulename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        logmsg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recordid_{::uint64_t{0u}},
        timeutcmillis_{::uint64_t{0u}},
        processid_{::uint64_t{0u}},
        threadid_{::uint64_t{0u}},
        line_{0u},
        loglevel_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ELogGRPCRecordMsg::ELogGRPCRecordMsg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ELogGRPCRecordMsg_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ELogGRPCRecordMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ELogGRPCRecordMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ELogGRPCRecordMsgDefaultTypeInternal() {}
  union {
    ELogGRPCRecordMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ELogGRPCRecordMsgDefaultTypeInternal _ELogGRPCRecordMsg_default_instance_;
}  // namespace elog_grpc
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_elog_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_elog_2eproto = nullptr;
const ::uint32_t
    TableStruct_elog_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.recordid_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.timeutcmillis_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.hostname_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.programname_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.processid_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.threadid_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.threadname_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.file_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.line_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.functionname_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.loglevel_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.logsourcename_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.modulename_),
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCRecordMsg, _impl_.logmsg_),
        9,
        10,
        0,
        1,
        2,
        11,
        12,
        3,
        4,
        13,
        5,
        14,
        6,
        7,
        8,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::elog_grpc::ELogGRPCStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 23, -1, sizeof(::elog_grpc::ELogGRPCRecordMsg)},
        {38, -1, -1, sizeof(::elog_grpc::ELogGRPCStatus)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::elog_grpc::_ELogGRPCRecordMsg_default_instance_._instance,
    &::elog_grpc::_ELogGRPCStatus_default_instance_._instance,
};
const char descriptor_table_protodef_elog_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nelog.proto\022\telog_grpc\"\307\004\n\021ELogGRPCReco"
    "rdMsg\022\025\n\010recordId\030\001 \001(\004H\000\210\001\001\022\032\n\rtimeUTCM"
    "illis\030\002 \001(\004H\001\210\001\001\022\025\n\010hostName\030\003 \001(\tH\002\210\001\001\022"
    "\025\n\010userName\030\004 \001(\tH\003\210\001\001\022\030\n\013programName\030\005 "
    "\001(\tH\004\210\001\001\022\026\n\tprocessId\030\006 \001(\004H\005\210\001\001\022\025\n\010thre"
    "adId\030\007 \001(\004H\006\210\001\001\022\027\n\nthreadName\030\010 \001(\tH\007\210\001\001"
    "\022\021\n\004file\030\t \001(\tH\010\210\001\001\022\021\n\004line\030\n \001(\rH\t\210\001\001\022\031"
    "\n\014functionName\030\013 \001(\tH\n\210\001\001\022\025\n\010logLevel\030\014 "
    "\001(\rH\013\210\001\001\022\032\n\rlogSourceName\030\r \001(\tH\014\210\001\001\022\027\n\n"
    "moduleName\030\016 \001(\tH\r\210\001\001\022\023\n\006logMsg\030\017 \001(\tH\016\210"
    "\001\001B\013\n\t_recordIdB\020\n\016_timeUTCMillisB\013\n\t_ho"
    "stNameB\013\n\t_userNameB\016\n\014_programNameB\014\n\n_"
    "processIdB\013\n\t_threadIdB\r\n\013_threadNameB\007\n"
    "\005_fileB\007\n\005_lineB\017\n\r_functionNameB\013\n\t_log"
    "LevelB\020\n\016_logSourceNameB\r\n\013_moduleNameB\t"
    "\n\007_logMsg\"\020\n\016ELogGRPCStatus2\256\001\n\017ELogGRPC"
    "Service\022J\n\rSendLogRecord\022\034.elog_grpc.ELo"
    "gGRPCRecordMsg\032\031.elog_grpc.ELogGRPCStatu"
    "s\"\000\022O\n\020StreamLogRecords\022\034.elog_grpc.ELog"
    "GRPCRecordMsg\032\031.elog_grpc.ELogGRPCStatus"
    "\"\000(\001B\"\n\014io.grpc.elogB\tELogProtoP\001\242\002\004ELOG"
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_elog_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_elog_2eproto = {
    false,
    false,
    848,
    descriptor_table_protodef_elog_2eproto,
    "elog.proto",
    &descriptor_table_elog_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_elog_2eproto::offsets,
    file_level_enum_descriptors_elog_2eproto,
    file_level_service_descriptors_elog_2eproto,
};
namespace elog_grpc {
// ===================================================================

class ELogGRPCRecordMsg::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ELogGRPCRecordMsg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_._has_bits_);
};

ELogGRPCRecordMsg::ELogGRPCRecordMsg(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ELogGRPCRecordMsg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:elog_grpc.ELogGRPCRecordMsg)
}
PROTOBUF_NDEBUG_INLINE ELogGRPCRecordMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::elog_grpc::ELogGRPCRecordMsg& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        hostname_(arena, from.hostname_),
        username_(arena, from.username_),
        programname_(arena, from.programname_),
        threadname_(arena, from.threadname_),
        file_(arena, from.file_),
        functionname_(arena, from.functionname_),
        logsourcename_(arena, from.logsourcename_),
        modulename_(arena, from.modulename_),
        logmsg_(arena, from.logmsg_) {}

ELogGRPCRecordMsg::ELogGRPCRecordMsg(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ELogGRPCRecordMsg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ELogGRPCRecordMsg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ELogGRPCRecordMsg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, recordid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, recordid_),
           offsetof(Impl_, loglevel_) -
               offsetof(Impl_, recordid_) +
               sizeof(Impl_::loglevel_));

  // @@protoc_insertion_point(copy_constructor:elog_grpc.ELogGRPCRecordMsg)
}
PROTOBUF_NDEBUG_INLINE ELogGRPCRecordMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        hostname_(arena),
        username_(arena),
        programname_(arena),
        threadname_(arena),
        file_(arena),
        functionname_(arena),
        logsourcename_(arena),
        modulename_(arena),
        logmsg_(arena) {}

inline void ELogGRPCRecordMsg::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, recordid_),
           0,
           offsetof(Impl_, loglevel_) -
               offsetof(Impl_, recordid_) +
               sizeof(Impl_::loglevel_));
}
ELogGRPCRecordMsg::~ELogGRPCRecordMsg() {
  // @@protoc_insertion_point(destructor:elog_grpc.ELogGRPCRecordMsg)
  SharedDtor(*this);
}
inline void ELogGRPCRecordMsg::SharedDtor(MessageLite& self) {
  ELogGRPCRecordMsg& this_ = static_cast<ELogGRPCRecordMsg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hostname_.Destroy();
  this_._impl_.username_.Destroy();
  this_._impl_.programname_.Destroy();
  this_._impl_.threadname_.Destroy();
  this_._impl_.file_.Destroy();
  this_._impl_.functionname_.Destroy();
  this_._impl_.logsourcename_.Destroy();
  this_._impl_.modulename_.Destroy();
  this_._impl_.logmsg_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ELogGRPCRecordMsg::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ELogGRPCRecordMsg(arena);
}
constexpr auto ELogGRPCRecordMsg::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ELogGRPCRecordMsg),
                                            alignof(ELogGRPCRecordMsg));
}
constexpr auto ELogGRPCRecordMsg::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ELogGRPCRecordMsg_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ELogGRPCRecordMsg::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ELogGRPCRecordMsg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ELogGRPCRecordMsg::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ELogGRPCRecordMsg>(), &ELogGRPCRecordMsg::ByteSizeLong,
              &ELogGRPCRecordMsg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_._cached_size_),
          false,
      },
      &ELogGRPCRecordMsg::kDescriptorMethods,
      &descriptor_table_elog_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ELogGRPCRecordMsg_class_data_ =
        ELogGRPCRecordMsg::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ELogGRPCRecordMsg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ELogGRPCRecordMsg_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ELogGRPCRecordMsg_class_data_.tc_table);
  return ELogGRPCRecordMsg_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 15, 0, 126, 2>
ELogGRPCRecordMsg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_._has_bits_),
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934528,  // skipmap
    offsetof(decltype(_table_), field_entries),
    15,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ELogGRPCRecordMsg_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::elog_grpc::ELogGRPCRecordMsg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 recordId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ELogGRPCRecordMsg, _impl_.recordid_), 9>(),
     {8, 9, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.recordid_)}},
    // optional uint64 timeUTCMillis = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ELogGRPCRecordMsg, _impl_.timeutcmillis_), 10>(),
     {16, 10, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.timeutcmillis_)}},
    // optional string hostName = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.hostname_)}},
    // optional string userName = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.username_)}},
    // optional string programName = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.programname_)}},
    // optional uint64 processId = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ELogGRPCRecordMsg, _impl_.processid_), 11>(),
     {48, 11, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.processid_)}},
    // optional uint64 threadId = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ELogGRPCRecordMsg, _impl_.threadid_), 12>(),
     {56, 12, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.threadid_)}},
    // optional string threadName = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.threadname_)}},
    // optional string file = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 4, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.file_)}},
    // optional uint32 line = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ELogGRPCRecordMsg, _impl_.line_), 13>(),
     {80, 13, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.line_)}},
    // optional string functionName = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 5, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.functionname_)}},
    // optional uint32 logLevel = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ELogGRPCRecordMsg, _impl_.loglevel_), 14>(),
     {96, 14, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.loglevel_)}},
    // optional string logSourceName = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 6, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.logsourcename_)}},
    // optional string moduleName = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 7, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.modulename_)}},
    // optional string logMsg = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 8, 0, PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.logmsg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 recordId = 1;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.recordid_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 timeUTCMillis = 2;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.timeutcmillis_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string hostName = 3;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.hostname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string userName = 4;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.username_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string programName = 5;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.programname_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional uint64 processId = 6;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.processid_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 threadId = 7;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.threadid_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string threadName = 8;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.threadname_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string file = 9;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.file_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional uint32 line = 10;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.line_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string functionName = 11;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.functionname_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional uint32 logLevel = 12;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.loglevel_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string logSourceName = 13;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.logsourcename_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string moduleName = 14;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.modulename_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string logMsg = 15;
    {PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.logmsg_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\0\10\10\13\0\0\12\4\0\14\0\15\12\6"
    "elog_grpc.ELogGRPCRecordMsg"
    "hostName"
    "userName"
    "programName"
    "threadName"
    "file"
    "functionName"
    "logSourceName"
    "moduleName"
    "logMsg"
  }},
};
PROTOBUF_NOINLINE void ELogGRPCRecordMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:elog_grpc.ELogGRPCRecordMsg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.hostname_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.programname_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.threadname_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.file_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _impl_.functionname_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _impl_.logsourcename_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _impl_.modulename_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    _impl_.logmsg_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00007e00u) != 0) {
    ::memset(&_impl_.recordid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.loglevel_) -
        reinterpret_cast<char*>(&_impl_.recordid_)) + sizeof(_impl_.loglevel_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ELogGRPCRecordMsg::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ELogGRPCRecordMsg& this_ = static_cast<const ELogGRPCRecordMsg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ELogGRPCRecordMsg::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ELogGRPCRecordMsg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:elog_grpc.ELogGRPCRecordMsg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 recordId = 1;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_recordid(), target);
  }

  // optional uint64 timeUTCMillis = 2;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this_._internal_timeutcmillis(), target);
  }

  // optional string hostName = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_hostname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elog_grpc.ELogGRPCRecordMsg.hostName");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string userName = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elog_grpc.ELogGRPCRecordMsg.userName");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string programName = 5;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const std::string& _s = this_._internal_programname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elog_grpc.ELogGRPCRecordMsg.programName");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional uint64 processId = 6;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this_._internal_processid(), target);
  }

  // optional uint64 threadId = 7;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this_._internal_threadid(), target);
  }

  // optional string threadName = 8;
  if ((cached_has_bits & 0x00000008u) != 0) {
    const std::string& _s = this_._internal_threadname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elog_grpc.ELogGRPCRecordMsg.threadName");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional string file = 9;
  if ((cached_has_bits & 0x00000010u) != 0) {
    const std::string& _s = this_._internal_file();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elog_grpc.ELogGRPCRecordMsg.file");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional uint32 line = 10;
  if ((cached_has_bits & 0x00002000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this_._internal_line(), target);
  }

  // optional string functionName = 11;
  if ((cached_has_bits & 0x00000020u) != 0) {
    const std::string& _s = this_._internal_functionname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elog_grpc.ELogGRPCRecordMsg.functionName");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // optional uint32 logLevel = 12;
  if ((cached_has_bits & 0x00004000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this_._internal_loglevel(), target);
  }

  // optional string logSourceName = 13;
  if ((cached_has_bits & 0x00000040u) != 0) {
    const std::string& _s = this_._internal_logsourcename();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elog_grpc.ELogGRPCRecordMsg.logSourceName");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // optional string moduleName = 14;
  if ((cached_has_bits & 0x00000080u) != 0) {
    const std::string& _s = this_._internal_modulename();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elog_grpc.ELogGRPCRecordMsg.moduleName");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // optional string logMsg = 15;
  if ((cached_has_bits & 0x00000100u) != 0) {
    const std::string& _s = this_._internal_logmsg();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elog_grpc.ELogGRPCRecordMsg.logMsg");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elog_grpc.ELogGRPCRecordMsg)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ELogGRPCRecordMsg::ByteSizeLong(const MessageLite& base) {
  const ELogGRPCRecordMsg& this_ = static_cast<const ELogGRPCRecordMsg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ELogGRPCRecordMsg::ByteSizeLong() const {
  const ELogGRPCRecordMsg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:elog_grpc.ELogGRPCRecordMsg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string hostName = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_hostname());
    }
    // optional string userName = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_username());
    }
    // optional string programName = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_programname());
    }
    // optional string threadName = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_threadname());
    }
    // optional string file = 9;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_file());
    }
    // optional string functionName = 11;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_functionname());
    }
    // optional string logSourceName = 13;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_logsourcename());
    }
    // optional string moduleName = 14;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_modulename());
    }
  }
  if ((cached_has_bits & 0x00007f00u) != 0) {
    // optional string logMsg = 15;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_logmsg());
    }
    // optional uint64 recordId = 1;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_recordid());
    }
    // optional uint64 timeUTCMillis = 2;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_timeutcmillis());
    }
    // optional uint64 processId = 6;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_processid());
    }
    // optional uint64 threadId = 7;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_threadid());
    }
    // optional uint32 line = 10;
    if ((cached_has_bits & 0x00002000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_line());
    }
    // optional uint32 logLevel = 12;
    if ((cached_has_bits & 0x00004000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_loglevel());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ELogGRPCRecordMsg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ELogGRPCRecordMsg*>(&to_msg);
  auto& from = static_cast<const ELogGRPCRecordMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:elog_grpc.ELogGRPCRecordMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_hostname(from._internal_hostname());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_username(from._internal_username());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_programname(from._internal_programname());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_internal_set_threadname(from._internal_threadname());
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_internal_set_file(from._internal_file());
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_internal_set_functionname(from._internal_functionname());
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_internal_set_logsourcename(from._internal_logsourcename());
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_internal_set_modulename(from._internal_modulename());
    }
  }
  if ((cached_has_bits & 0x00007f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_internal_set_logmsg(from._internal_logmsg());
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.recordid_ = from._impl_.recordid_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.timeutcmillis_ = from._impl_.timeutcmillis_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.processid_ = from._impl_.processid_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.threadid_ = from._impl_.threadid_;
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _this->_impl_.line_ = from._impl_.line_;
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      _this->_impl_.loglevel_ = from._impl_.loglevel_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ELogGRPCRecordMsg::CopyFrom(const ELogGRPCRecordMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elog_grpc.ELogGRPCRecordMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ELogGRPCRecordMsg::InternalSwap(ELogGRPCRecordMsg* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hostname_, &other->_impl_.hostname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.programname_, &other->_impl_.programname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.threadname_, &other->_impl_.threadname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_, &other->_impl_.file_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.functionname_, &other->_impl_.functionname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.logsourcename_, &other->_impl_.logsourcename_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.modulename_, &other->_impl_.modulename_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.logmsg_, &other->_impl_.logmsg_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.loglevel_)
      + sizeof(ELogGRPCRecordMsg::_impl_.loglevel_)
      - PROTOBUF_FIELD_OFFSET(ELogGRPCRecordMsg, _impl_.recordid_)>(
          reinterpret_cast<char*>(&_impl_.recordid_),
          reinterpret_cast<char*>(&other->_impl_.recordid_));
}

::google::protobuf::Metadata ELogGRPCRecordMsg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ELogGRPCStatus::_Internal {
 public:
};

ELogGRPCStatus::ELogGRPCStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, ELogGRPCStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:elog_grpc.ELogGRPCStatus)
}
ELogGRPCStatus::ELogGRPCStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ELogGRPCStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, ELogGRPCStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ELogGRPCStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:elog_grpc.ELogGRPCStatus)
}

inline void* PROTOBUF_NONNULL ELogGRPCStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ELogGRPCStatus(arena);
}
constexpr auto ELogGRPCStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ELogGRPCStatus),
                                            alignof(ELogGRPCStatus));
}
constexpr auto ELogGRPCStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ELogGRPCStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ELogGRPCStatus::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ELogGRPCStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ELogGRPCStatus::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ELogGRPCStatus>(), &ELogGRPCStatus::ByteSizeLong,
              &ELogGRPCStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ELogGRPCStatus, _impl_._cached_size_),
          false,
      },
      &ELogGRPCStatus::kDescriptorMethods,
      &descriptor_table_elog_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ELogGRPCStatus_class_data_ =
        ELogGRPCStatus::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ELogGRPCStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ELogGRPCStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ELogGRPCStatus_class_data_.tc_table);
  return ELogGRPCStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
ELogGRPCStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ELogGRPCStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::elog_grpc::ELogGRPCStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata ELogGRPCStatus::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace elog_grpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_elog_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
