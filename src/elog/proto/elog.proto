syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.elog";
option java_outer_classname = "ELogProto";
option objc_class_prefix = "ELOG";

package elog_grpc;

// Interface exported by the server.
service ELogService {

  // Sends a log record to the server.
  rpc SendLogRecord(ELogRecordMsg) returns (ELogStatusMsg) {}

  // Sends a stream of log records to the server
  rpc StreamLogRecords(stream ELogRecordMsg) returns (ELogStatusMsg) {}
}

// ELog Record
message ELogRecordMsg {
    optional uint64 recordId = 1;
    optional uint64 timeUnixEpochMillis = 2;
    optional string hostName = 3;
    optional string userName = 4;
    optional string osName = 5;
    optional string osVersion = 6;
    optional string appName = 7;
    optional string programName = 8;
    optional uint64 processId = 9;
    optional uint64 threadId = 10;
    optional string threadName = 11;
    optional string logSourceName = 12;
    optional string moduleName = 13;
    optional string file = 14;
    optional uint32 line = 15;
    optional string functionName = 16;
    optional uint32 logLevel = 17;
    optional string logMsg = 18;
}

message ELogStatusMsg {}